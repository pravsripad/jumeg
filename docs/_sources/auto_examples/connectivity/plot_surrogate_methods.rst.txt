.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_connectivity_plot_surrogate_methods.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_connectivity_plot_surrogate_methods.py:


=============================================================================
Script showing various methods used to generate surrogate from a time series.
=============================================================================



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/connectivity/images/sphx_glr_plot_surrogate_methods_001.png
            :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/connectivity/images/sphx_glr_plot_surrogate_methods_002.png
            :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/connectivity/images/sphx_glr_plot_surrogate_methods_003.png
            :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/connectivity/images/sphx_glr_plot_surrogate_methods_004.png
            :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Surrogates OK.
    Surrogates OK.
    /Users/psripad/mne/jumeg/examples/connectivity/plot_surrogate_methods.py:50: UserWarning: Matplotlib is currently using agg, which is a non-GUI backend, so cannot show the figure.
      pl.show()






|


.. code-block:: default


    import numpy as np
    import mne
    from jumeg.jumeg_surrogates import Surrogates, check_power_spectrum
    import matplotlib.pyplot as pl

    mysurr = Surrogates.SimpleTestData()

    # do shuffling
    shuffled = mysurr.shuffle_time_points(mysurr.original_data)

    pl.figure('shuffled')
    pl.title('shuffled')
    pl.plot(mysurr.original_data[0])
    pl.plot(shuffled[0], color='r')

    # do shifting
    shifted = mysurr.shift_data(mysurr.original_data)

    pl.figure('shifted')
    pl.title('Shifted')
    pl.plot(mysurr.original_data[0])
    pl.plot(shifted[0], color='r')

    # do phase randomization
    phase_random = mysurr.randomize_phase(mysurr.original_data)

    pl.figure('phase_randomize')
    pl.title('phase_randomize')
    pl.plot(mysurr.original_data[0])
    pl.plot(phase_random[0], color='r')

    # do phase randomize as in scot
    phase_random_scot = mysurr.randomize_phase_scot(mysurr.original_data)

    pl.figure('phase_randomize_scot')
    pl.title('phase_randomize_scot')
    pl.plot(mysurr.original_data[0])
    pl.plot(phase_random_scot[0], color='r')

    check_power_spectrum(mysurr.original_data, phase_random)
    check_power_spectrum(mysurr.original_data, phase_random_scot)

    pl.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.356 seconds)


.. _sphx_glr_download_auto_examples_connectivity_plot_surrogate_methods.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_surrogate_methods.py <plot_surrogate_methods.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_surrogate_methods.ipynb <plot_surrogate_methods.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
