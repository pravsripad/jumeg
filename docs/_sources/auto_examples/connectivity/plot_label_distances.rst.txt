.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_connectivity_plot_label_distances.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_connectivity_plot_label_distances.py:


==============================================================
Script to plot label distances on circle and connectome plots.
==============================================================



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/connectivity/images/sphx_glr_plot_label_distances_001.png
            :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/connectivity/images/sphx_glr_plot_label_distances_002.png
            :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Reading labels from parcellation...
       read 34 labels from /Users/psripad/mne_data/MNE-sample-data/subjects/sample/label/lh.aparc.annot
       read 34 labels from /Users/psripad/mne_data/MNE-sample-data/subjects/sample/label/rh.aparc.annot






|


.. code-block:: default


    import os.path as op
    import numpy as np

    import mne
    from mne.datasets import sample

    from jumeg import get_jumeg_path
    from jumeg.connectivity import (get_label_distances,
                                    plot_grouped_connectivity_circle)
    import yaml

    from nilearn import plotting

    data_path = sample.data_path()
    subjects_dir = data_path + '/subjects'
    subject = 'sample'

    parc = 'aparc'

    yaml_fname = get_jumeg_path() + '/data/desikan_%s_cortex_based_grouping.yaml' % parc
    label_distances_fname = get_jumeg_path() + '/data/desikan_%s_label_com_distances.npy' % parc

    labels_fname = get_jumeg_path() + '/data/desikan_label_names.yaml'
    with open(labels_fname, 'r') as f:
        label_names = yaml.safe_load(f)['label_names']

    replacer_dict_fname = get_jumeg_path() + '/data/replacer_dictionaries.yaml'
    with open(replacer_dict_fname, 'r') as f:
        replacer_dict = yaml.safe_load(f)['replacer_dict_aparc']

    # load the distances matrix
    con = np.load(label_distances_fname)
    node_order_size = con.shape[0]

    # forget long range connections, plot short neighbouring connections
    neighbor_range = 30.  # millimetres
    con[con > neighbor_range] = 0.

    plot_grouped_connectivity_circle(yaml_fname, con, label_names,
                                     labels_mode='cortex_only',
                                     node_order_size=node_order_size,
                                     replacer_dict=replacer_dict,
                                     out_fname='label_com_distances_circle_%0.1f_%s.png' % (neighbor_range, parc),
                                     colorbar_pos=(0.1, 0.1),
                                     n_lines=None, colorbar=True,
                                     colormap='Reds')

    # compute the distances between COM's of the labels
    _, coords, _, _ = get_label_distances(subject, subjects_dir, parc=parc)

    # compute the degree
    degs = mne.connectivity.degree(con, threshold_prop=1)

    # show the label ROIs using Nilearn plotting
    fig = plotting.plot_connectome(np.zeros((node_order_size, node_order_size)),
                                   coords, node_size=20, edge_threshold='99%',
                                   node_color='cornflowerblue',
                                   display_mode='ortho',
                                   title='%s' % parc)


    # fig.savefig('%s_label_distances_based_degrees.png' % parc)
    fig.savefig('%s_labels_degrees.png' % parc)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  11.797 seconds)


.. _sphx_glr_download_auto_examples_connectivity_plot_label_distances.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_label_distances.py <plot_label_distances.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_label_distances.ipynb <plot_label_distances.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
